<?xml version="1.0" ?>
<ruleset name="MyApexRules" xmlns="http://pmd.sourceforge.net/ruleset/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 https://pmd.sourceforge.io/ruleset_2_0_0.xsd">

   <description>My Apex Rules</description>

   <rule name="AvoidProductionDebugLogs" language="apex" message="Avoid leaving System.debug() statments in code as they negativly influence performance." class="net.sourceforge.pmd.lang.rule.XPathRule">
      <properties>
          <property name="xpath">
              <value><![CDATA[
              //MethodCallExpression[lower-case(@FullMethodName)='system.debug'][count(*)=2]
              ]]></value>
          </property>
      </properties>
  </rule>

   <rule name="EnforceCrudFlsWithUserMode" language="apex" message="Enforce CRUD/FLS with USER MODE" class="net.sourceforge.pmd.lang.rule.XPathRule">
      <priority>2</priority>
      <properties>
         <property name="version" value="2.0"/>
         <property name="xpath">
            <value>
               <![CDATA[
               //SoqlExpression[
                  not(ends-with(lower-case(normalize-space(@Query)), 'with user_mode'))] 
               | 
               //MethodCallExpression[
                  lower-case(@FullMethodName) = ('database.count', 'database.query', 'database.getquerylocator', 'search.query')]
                  [not(VariableExpression[lower-case(@Image)='user_mode']/ReferenceExpression[lower-case(@Image)='accesslevel'])]
               ]]>
            </value>
         </property>
      </properties>
   </rule>


   <rule name="NullValueCheckBeforeEmptyCheck" language="apex" message="Apex code must check != null before .isEmpty()" class="net.sourceforge.pmd.lang.rule.XPathRule">
      <priority>2</priority>
      <properties>
         <property name="version" value="2.0"/>
         <property name="xpath">
         <value>
               <![CDATA[
               //BooleanExpression[@Op="&&"][
                  child::*[2][
                  self::BooleanExpression[@Op="!="][
                     child::*[1][self::VariableExpression] and
                     child::*[2][self::LiteralExpression[@LiteralType="NULL"]]
                  ]
                  ]
               ]
               ]]>
         </value>
         </property>
      </properties>
   </rule>
</ruleset>
